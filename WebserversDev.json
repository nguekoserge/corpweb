{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Parameters": {
      "InstanceType": {
        "Description": "EC2 instance type",
        "Type": "String",
        "AllowedValues": ["t2.micro", "t2.small"],
        "ConstraintDescription": "Must be a valid EC2 instance type."
      },
      "KeyPair": {
        "Description": "Name of the EC2 key pair",
        "Type": "String"
      },
      "YourIp": {
        "Description": "Your public IP address in CIDR notation",
        "Type": "String",
        "Default": "0.0.0.0/0"
      }
    },
    "Resources": {
      "EngineeringVpc": {
        "Type": "AWS::EC2::VPC",
        "Properties": {
          "CidrBlock": "10.0.0.0/18",
          "EnableDnsSupport": true,
          "EnableDnsHostnames": true
        }
      },
      "PublicSubnet1": {
        "Type": "AWS::EC2::Subnet",
        "Properties": {
          "VpcId": {"Ref": "EngineeringVpc"},
          "CidrBlock": "10.0.0.0/24",
          "MapPublicIpOnLaunch": true,
          "AvailabilityZone": {"Fn::Select": ["0", {"Fn::GetAZs": {"Ref": "AWS::Region"}}]}
        }
      },
      "PublicSubnet2": {
        "Type": "AWS::EC2::Subnet",
        "Properties": {
          "VpcId": {"Ref": "EngineeringVpc"},
          "CidrBlock": "10.0.1.0/24",
          "MapPublicIpOnLaunch": true,
          "AvailabilityZone": {"Fn::Select": ["1", {"Fn::GetAZs": {"Ref": "AWS::Region"}}]}
        }
      },
      "InternetGateway": {
        "Type": "AWS::EC2::InternetGateway",
        "Properties": {}
      },
      "VPCGatewayAttachment": {
        "Type": "AWS::EC2::VPCGatewayAttachment",
        "Properties": {
          "VpcId": {"Ref": "EngineeringVpc"},
          "InternetGatewayId": {"Ref": "InternetGateway"}
        }
      },
      "PublicRouteTable": {
        "Type": "AWS::EC2::RouteTable",
        "Properties": {"VpcId": {"Ref": "EngineeringVpc"}}
      },
      "PublicRoute": {
        "Type": "AWS::EC2::Route",
        "DependsOn": ["VPCGatewayAttachment"],
        "Properties": {
          "RouteTableId": {"Ref": "PublicRouteTable"},
          "DestinationCidrBlock": "0.0.0.0/0",
          "GatewayId": {"Ref": "InternetGateway"}
        }
      },
      "WebserverSG": {
        "Type": "AWS::EC2::SecurityGroup",
        "Properties": {
          "VpcId": {"Ref": "EngineeringVpc"},
          "GroupDescription": "Security group rules for webserver host.",
          "SecurityGroupIngress": [
            {
              "IpProtocol": "tcp",
              "FromPort": "22",
              "ToPort": "22",
              "CidrIp": {"Ref": "YourIp"}
            },
            {
              "IpProtocol": "tcp",
              "FromPort": "80",
              "ToPort": "80",
              "CidrIp": "0.0.0.0/0"
            }
          ]
        }
      },
      "Web1": {
        "Type": "AWS::EC2::Instance",
        "Properties": {
          "InstanceType": {"Ref": "InstanceType"},
          "ImageId": "ami-0c7f9161f8491665f",
          "KeyName": {"Ref": "KeyPair"},
          "SubnetId": {"Ref": "PublicSubnet1"},
          "SecurityGroupIds": [{"Ref": "WebserverSG"}],
          "UserData": {"Fn::Base64": {"Fn::Join": ["", [
            "#!/bin/bash\n",
            "yum update -y\n",
            "yum install -y git httpd php\n",
            "service httpd start\n",
            "chkconfig httpd on\n",
            "aws s3 cp s3://seis665-public/index.php /var/www/html/\n"
          ]]}},
          "Tags": [{"Key": "Name", "Value": "web1"}]
        }
      },
      "Web2": {
        "Type": "AWS::EC2::Instance",
        "Properties": {
          "InstanceType": {"Ref": "InstanceType"},
          "ImageId": "ami-0c7f9161f8491665f",
          "KeyName": {"Ref": "KeyPair"},
          "SubnetId": {"Ref": "PublicSubnet2"},
          "SecurityGroupIds": [{"Ref": "WebserverSG"}],
          "UserData": {"Fn::Base64": {"Fn::Join": ["", [
            "#!/bin/bash\n",
            "yum update -y\n",
            "yum install -y git httpd php\n",
            "service httpd start\n",
            "chkconfig httpd on\n",
            "aws s3 cp s3://seis665-public/index.php /var/www/html/\n"
          ]]}},
          "Tags": [{"Key": "Name", "Value": "web2"}]
        }
      },
      "EngineeringLB": {
        "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
        "Properties": {
          "Subnets": [{"Ref": "PublicSubnet1"}, {"Ref": "PublicSubnet2"}],
          "SecurityGroups": [{"Ref": "WebserverSG"}]
        }
      },
      "EngineeringWebservers": {
        "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
        "Properties": {
          "VpcId": {"Ref": "EngineeringVpc"},
          "Protocol": "HTTP",
          "Port": 80,
          "Targets": [
            {"Id": {"Ref": "Web1"}},
            {"Id": {"Ref": "Web2"}}
          ]
        }
      },
      "EngineeringLBListener": {
        "Type": "AWS::ElasticLoadBalancingV2::Listener",
        "Properties": {
          "LoadBalancerArn": {"Ref": "EngineeringLB"},
          "Protocol": "HTTP",
          "Port": 80,
          "DefaultActions": [{
            "Type": "forward",
            "TargetGroupArn": {"Ref": "EngineeringWebservers"}
          }]
        }
      }
    },
    "Outputs": {
      "WebUrl": {
        "Description": "Load balancer DNS name",
        "Value": {"Fn::GetAtt": ["EngineeringLB", "DNSName"]}
      }
    }
  }
  